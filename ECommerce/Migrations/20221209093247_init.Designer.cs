// <auto-generated />
using System;
using ECommerce.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ECommerce.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20221209093247_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ECommerce.Models.Concrete.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ImageUrl = "jacket.svg",
                            Name = "Jacket"
                        },
                        new
                        {
                            Id = 2,
                            ImageUrl = "watch.svg",
                            Name = "Watch"
                        },
                        new
                        {
                            Id = 3,
                            ImageUrl = "tee.svg",
                            Name = "T-Shirt"
                        },
                        new
                        {
                            Id = 4,
                            ImageUrl = "shoes.svg",
                            Name = "Shoes"
                        },
                        new
                        {
                            Id = 5,
                            ImageUrl = "hat.svg",
                            Name = "Hat"
                        });
                });

            modelBuilder.Entity("ECommerce.Models.Concrete.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Description = "Mens Winter Leathers Jackets",
                            ImageUrl = "jacket-1.jpg",
                            Name = ".",
                            Price = 32.0
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            Description = "Mens Winter Leathers Jackets",
                            ImageUrl = "jacket-2.jpg",
                            Name = ".",
                            Price = 48.0
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 2,
                            Description = "Smart watche Vital Plus",
                            ImageUrl = "watch-1.jpg",
                            Name = ".",
                            Price = 100.0
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 2,
                            Description = "Pocket Watch Leather Pouch",
                            ImageUrl = "watch-3.jpg",
                            Name = ".",
                            Price = 150.0
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 3,
                            Description = "Pure Garment Dyed Cotton Shirt",
                            ImageUrl = "shirt-1.jpg",
                            Name = ".",
                            Price = 45.0
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 4,
                            Description = "Casual Men's Brown shoes",
                            ImageUrl = "shoe-2.jpg",
                            Name = ".",
                            Price = 45.0
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 4,
                            Description = "Men's Leather Formal Wear shoes",
                            ImageUrl = "shoe-1.jpg",
                            Name = ".",
                            Price = 50.0
                        });
                });

            modelBuilder.Entity("ECommerce.Models.Concrete.ProductTag", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("TagId")
                        .HasColumnType("int");

                    b.HasKey("ProductId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("ProductTags");

                    b.HasData(
                        new
                        {
                            ProductId = 2,
                            TagId = 1
                        },
                        new
                        {
                            ProductId = 4,
                            TagId = 1
                        },
                        new
                        {
                            ProductId = 7,
                            TagId = 1
                        });
                });

            modelBuilder.Entity("ECommerce.Models.Concrete.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tags");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Title = "Newer"
                        });
                });

            modelBuilder.Entity("ECommerce.Models.Concrete.Product", b =>
                {
                    b.HasOne("ECommerce.Models.Concrete.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Category");
                });

            modelBuilder.Entity("ECommerce.Models.Concrete.ProductTag", b =>
                {
                    b.HasOne("ECommerce.Models.Concrete.Product", "Product")
                        .WithMany("ProductTags")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ECommerce.Models.Concrete.Tag", "Tag")
                        .WithMany("ProductTags")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("ECommerce.Models.Concrete.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("ECommerce.Models.Concrete.Product", b =>
                {
                    b.Navigation("ProductTags");
                });

            modelBuilder.Entity("ECommerce.Models.Concrete.Tag", b =>
                {
                    b.Navigation("ProductTags");
                });
#pragma warning restore 612, 618
        }
    }
}
